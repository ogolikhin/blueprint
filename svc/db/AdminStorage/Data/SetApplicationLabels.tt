<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".sql" encoding="utf-8" #>
<#@ assembly name="System.Data.dll"#>
<#@ assembly name="Microsoft.VisualBasic.dll"#>
<#@ import namespace="System"#>
<#@ import namespace="System.Data"#>
<#@ import namespace="System.Text"#>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.VisualBasic.FileIO"#>

-- -----------------------------------------------------------------------------------------------
-- Insert statements for Application Labels are Auto-Generated by T4 template file.
--
-- To add/edit/remove application labels from the [dbo].[ApplicationLabels] table, please update the
-- CSV file located at: '~\blueprint\svc\db\AdminStorage\Data\ApplicationLabels_en-US.csv'
-- 
-- DO NOT EDIT THESE INSERT STATEMENTS DIRECTLY AS YOUR CHANGES WILL BE OVERWRITTEN

CREATE TABLE #tempAppLabels (
	[Key] [nvarchar](128) NOT NULL,
	[Locale] [nvarchar](32) NOT NULL,
	[Text] [nvarchar](512) NOT NULL
)

<#	List<string[]> allApplicationLabels = new List<string[]>();

	allApplicationLabels.AddRange(this.GetAppLablesFromCsv(this.Host.ResolvePath ( @".\ApplicationLabels_en-US.csv" )));
	allApplicationLabels.AddRange(this.GetAppLablesFromCsv(this.Host.ResolvePath ( @".\ApplicationLabels_fr-CA.csv" )));

	foreach (string[] appLabel in allApplicationLabels)
	{
#>
INSERT INTO #tempAppLabels ([Key], [Locale], [Text]) VALUES ('<#=appLabel[0]#>', '<#=appLabel[1]#>', N'<#=appLabel[2]#>')
<#
	}
#>

-- Add application label if [Key]/[Locale] combination does not exist
INSERT INTO [dbo].[ApplicationLabels] ([Key], [Locale], [Text])
SELECT #tempAppLabels.[Key], #tempAppLabels.[Locale], #tempAppLabels.[Text]
  FROM #tempAppLabels
 WHERE NOT EXISTS ( SELECT *
					  FROM [dbo].[ApplicationLabels] 
					 WHERE [dbo].[ApplicationLabels].[Key] = #tempAppLabels.[Key]
					   AND [dbo].[ApplicationLabels].[Locale] = #tempAppLabels.[Locale])

-- Update if [Key]/[Locale] combination exists, but text is different
UPDATE [dbo].[ApplicationLabels]
   SET [dbo].[ApplicationLabels].[Text] = #tempAppLabels.[Text]
  FROM [dbo].[ApplicationLabels]
  JOIN #tempAppLabels 
		ON [dbo].[ApplicationLabels].[Key] = #tempAppLabels.[Key]
	   AND [dbo].[ApplicationLabels].[Locale] = #tempAppLabels.[Locale]
	   AND [dbo].[ApplicationLabels].[Text] <> #tempAppLabels.[Text]

-- Delete if [Key]/[Locale] combination no longer exists
DELETE
  FROM [dbo].[ApplicationLabels]
 WHERE NOT EXISTS ( SELECT *
					  FROM #tempAppLabels 
					 WHERE #tempAppLabels.[Key] = [dbo].[ApplicationLabels].[Key]
					   AND #tempAppLabels.[Locale] = [dbo].[ApplicationLabels].[Locale])

DROP TABLE #tempAppLabels

-- End of Auto-Generation of SQL insert statements for Application Labels
-- -----------------------------------------------------------------------------------------------
<#+
	public List<string[]> GetAppLablesFromCsv(string csvFile)
	{
		List<string[]> appLabels = new List<string[]>();

		using (TextFieldParser csvParser = new TextFieldParser(csvFile))
		{
			csvParser.CommentTokens = new string[] {"#"};
			csvParser.SetDelimiters(new string[] {","});
			csvParser.HasFieldsEnclosedInQuotes = true;

			// Skip over header line.
			csvParser.ReadLine();

			if (!csvParser.EndOfData)
			{
				// Get Locale - which is always the second line
				string[] locale = csvParser.ReadFields();
			
				while (!csvParser.EndOfData)
				{
					string[] csvLine = csvParser.ReadFields();
					if (csvLine.Length == 2)
					{
						// Escape any quotes
						csvLine[1] = csvLine[1].Replace("'","''");
					}

					string[] fields = {csvLine[0], locale[1], csvLine[1]};
					appLabels.Add(fields);
				}
			}
		}

		return appLabels;
	}
#>